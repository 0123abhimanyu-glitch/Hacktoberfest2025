name: ‚úÖ Auto-Merge Valuable PRs

on:
  pull_request:
    types: [opened, synchronize, reopened]
  schedule:
    # Check for mergeable PRs every 2 hours
    - cron: '0 */2 * * *'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  auto-merge-valuable:
    runs-on: ubuntu-latest
    if: github.repository == 'fineanmol/Hacktoberfest2024'
    
    steps:
      - name: üîÑ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: üîç Find mergeable valuable PRs
        id: find-prs
        run: |
          # Get PRs with the valuable-contribution label that are mergeable
          valuable_prs=$(gh pr list --state open --label "valuable-contribution" --json number,title,author,mergeable --limit 50)
          
          # Also check PRs that don't only modify contributors file
          all_prs=$(gh pr list --state open --json number,title,author,mergeable,files --limit 50)
          
          echo "valuable_prs=$valuable_prs" >> $GITHUB_OUTPUT
          echo "all_prs=$all_prs" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ‚úÖ Auto-merge valuable PRs
        run: |
          # Process valuable PRs first
          echo '${{ steps.find-prs.outputs.valuable_prs }}' | jq -r '.[] | @base64' | while IFS= read -r pr_data; do
            if [ -n "$pr_data" ]; then
              pr=$(echo "$pr_data" | base64 -d)
              pr_number=$(echo "$pr" | jq -r '.number')
              pr_title=$(echo "$pr" | jq -r '.title')
              pr_author=$(echo "$pr" | jq -r '.author.login')
              pr_mergeable=$(echo "$pr" | jq -r '.mergeable')
              
              echo "üîÑ Processing valuable PR #$pr_number by @$pr_author"
              echo "Title: $pr_title"
              echo "Mergeable: $pr_mergeable"
              
              if [ "$pr_mergeable" = "MERGEABLE" ] || [ "$pr_mergeable" = "true" ]; then
                echo "‚úÖ Auto-merging valuable PR #$pr_number"
                
                # Merge the PR
                if gh pr merge $pr_number --merge --delete-branch; then
                  echo "‚úÖ Successfully merged PR #$pr_number"
                  
                  # Add success comment
                  gh pr comment $pr_number --body "üöÄ **Automatically Merged!** Thank you @$pr_author for your valuable contribution to Hacktoberfest 2024! Your code has been successfully merged into the main branch. üéâ #Hacktoberfest #OpenSource" || true
                else
                  echo "‚ùå Failed to merge PR #$pr_number"
                fi
              else
                echo "‚ö†Ô∏è PR #$pr_number not mergeable yet"
              fi
              
              sleep 2  # Rate limiting
            fi
          done
          
          # Process other PRs that might be valuable but unlabeled
          echo '${{ steps.find-prs.outputs.all_prs }}' | jq -r '.[] | @base64' | while IFS= read -r pr_data; do
            if [ -n "$pr_data" ]; then
              pr=$(echo "$pr_data" | base64 -d)
              pr_number=$(echo "$pr" | jq -r '.number')
              pr_title=$(echo "$pr" | jq -r '.title')
              pr_author=$(echo "$pr" | jq -r '.author.login')
              pr_mergeable=$(echo "$pr" | jq -r '.mergeable')
              
              # Get files changed in this PR
              files_changed=$(echo "$pr" | jq -r '.files[].path // empty')
              
              # Skip if empty or only contributors file
              if [ -z "$files_changed" ]; then
                continue
              fi
              
              contributors_only=true
              while IFS= read -r file; do
                if [ -n "$file" ] && [ "$file" != "contributors/contributorsList.js" ]; then
                  contributors_only=false
                  break
                fi
              done <<< "$files_changed"
              
              # Skip contributor-only PRs (handled by other workflow)
              if [ "$contributors_only" = "true" ]; then
                continue
              fi
              
              echo "üîÑ Processing unlabeled valuable PR #$pr_number by @$pr_author"
              
              if [ "$pr_mergeable" = "MERGEABLE" ] || [ "$pr_mergeable" = "true" ]; then
                echo "‚úÖ Auto-merging valuable PR #$pr_number"
                
                # Add label first
                gh pr edit $pr_number --add-label "valuable-contribution" || true
                
                # Merge the PR
                if gh pr merge $pr_number --merge --delete-branch; then
                  echo "‚úÖ Successfully merged PR #$pr_number"
                  
                  # Add success comment
                  gh pr comment $pr_number --body "üöÄ **Automatically Merged!** Thank you @$pr_author for your valuable contribution to Hacktoberfest 2024! Your code has been successfully merged. üéâ #Hacktoberfest #OpenSource" || true
                else
                  echo "‚ùå Failed to merge PR #$pr_number"
                fi
              fi
              
              sleep 2  # Rate limiting
            fi
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üìä Summary
        run: |
          echo "ü§ñ Auto-merge workflow completed!"
          contributor_count=$(grep -c "id:" contributors/contributorsList.js)
          echo "üìä Total Contributors: $contributor_count"
          echo "‚úÖ Processed valuable PRs for auto-merging" 